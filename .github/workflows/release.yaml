name: Release Tradestream Artifacts
on:
  push:
    branches:
      - main
      - develop
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      PIPELINE_REPO: tradestreamhq/tradestream-data-pipeline
      PIPELINE_SECTION_KEY: pipeline
      CANDLE_INGESTOR_REPO: tradestreamhq/candle-ingestor
      CANDLE_INGESTOR_SECTION_KEY: candleIngestor
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Semantic Version
        id: version
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          namespace: "${{ steps.extract_branch.outputs.branch }}"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"

      - name: Set up Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Push Tag
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        run: |
          git tag ${{ steps.version.outputs.version_tag }}
          git push https://$GITHUB_ACTOR:${{ secrets.ACTIONS_TOKEN }}@github.com/${{ github.repository }} --tags

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: bazel-contrib/setup-bazel@0.9.1
        with:
          # Avoid downloading Bazel every time
          bazelisk-cache: true
          bazelrc: |
            build --bes_results_url=https://app.buildbuddy.io/invocation/
            build --bes_backend=grpcs://remote.buildbuddy.io
            build --remote_cache=grpcs://remote.buildbuddy.io
            build --noremote_upload_local_results # Uploads logs & artifacts without writing to cache
            build --remote_timeout=10m
            build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}

      - name: Push the Pipeline image
        run: |
          bazel run //src/main/java/com/verlumen/tradestream/pipeline:push_image \
            -- \
            --tag ${{ steps.version.outputs.version_tag }}
            
      - name: Push the Candle Ingestor image
        run: |
          bazel run //services/candle_ingestor:push_candle_ingestor_image \
            -- \
            --tag ${{ steps.version.outputs.version_tag }}

      - name: Install yq
        run: |
          sudo wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64
          sudo chmod +x /usr/bin/yq

      - name: Update values.yaml with new image tags
        run: |
          yq eval-all '
            . as $item ireduce ({}; . * $item ) |
            .["${{ env.PIPELINE_SECTION_KEY }}"].image.repository = "${{ env.PIPELINE_REPO }}" |
            .["${{ env.PIPELINE_SECTION_KEY }}"].image.tag = "${{ steps.version.outputs.version_tag }}" |
            .["${{ env.CANDLE_INGESTOR_SECTION_KEY }}"].image.repository = "${{ env.CANDLE_INGESTOR_REPO }}" |
            .["${{ env.CANDLE_INGESTOR_SECTION_KEY }}"].image.tag = "${{ steps.version.outputs.version_tag }}"
          ' charts/tradestream/values.yaml > charts/tradestream/values.yaml.tmp
          mv charts/tradestream/values.yaml.tmp charts/tradestream/values.yaml

      - name: Update MODULE.bazel version
        run: |
          echo "Updating MODULE.bazel to version ${{ steps.version.outputs.version_tag }}"
          # Only replace "version" within the module(...) block
          sed -i.bak '/^module(/,/^)/ s/\(version\s*=\s*"\)[^"]\+"/\1'"${{ steps.version.outputs.version_tag }}"'"/' MODULE.bazel
        shell: bash

      - name: Commit and Push All Changes
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        run: |
          git add charts/tradestream/values.yaml MODULE.bazel
          git commit -m "Bump version to ${{ steps.version.outputs.version_tag }}" || echo "No changes to commit"
          git push https://$GITHUB_ACTOR:${{ secrets.ACTIONS_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
