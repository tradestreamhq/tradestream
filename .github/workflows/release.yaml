name: Release Tradestream Artifacts (Parallel)
on:
  push:
    branches:
      - main

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Semantic Version
        id: version
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"

      - name: Set up Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Push Tag
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
        run: |
          git tag ${{ steps.version.outputs.version_tag }}
          git push https://$GITHUB_ACTOR:${{ secrets.ACTIONS_TOKEN }}@github.com/${{ github.repository }} --tags

  build-and-push:
    needs: prepare-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: "Candle Ingestor"
            target: "//services/candle_ingestor:push_candle_ingestor_image"
          - name: "Top Crypto Updater"
            target: "//services/top_crypto_updater:push_top_crypto_updater_image"
          - name: "Strategy Discovery Request Factory"
            target: "//services/strategy_discovery_request_factory:push_strategy_discovery_request_factory_image"
          - name: "Strategy Discovery Pipeline"
            target: "//src/main/java/com/verlumen/tradestream/discovery:push_image"
          - name: "Strategy Consumer"
            target: "//services/strategy_consumer:push_strategy_consumer_image"
          - name: "Strategy Monitor API"
            target: "//services/strategy_monitor_api:push_strategy_monitor_api_image"
          - name: "Strategy Monitor UI"
            target: "//ui/strategy-monitor:push_strategy_monitor_ui_image"
          - name: "Strategy Confidence Scorer"
            target: "//services/strategy_confidence_scorer:push_strategy_confidence_scorer_image"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          bazelrc: |
            build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}

      - name: Build and Push ${{ matrix.service.name }}
        run: |
          bazel run ${{ matrix.service.target }} \
            -- \
            --tag ${{ needs.prepare-release.outputs.version }}

  notify-deployment:
    needs: [prepare-release, build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Notify ArgoCD Deployment
        run: |
          echo "âœ… All images pushed successfully with tag: ${{ needs.prepare-release.outputs.version }}"
          echo "ðŸ”„ ArgoCD Image Updater will automatically detect and deploy the new images within 2-5 minutes"
          echo "ðŸ“Š Monitor deployment: kubectl get application tradestream-dev -n argocd"
