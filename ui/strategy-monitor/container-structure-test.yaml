schemaVersion: "2.0.0"

metadataTest:
  workdir: "/app"
  user: "nobody"

fileExistenceTests:
  - name: "Python executable exists"
    path: "/usr/local/bin/python3"
    shouldExist: true
    permissions: "Lrwxrwxrwx"
  
  - name: "UI files exist in ui directory"
    path: "/ui/strategy-monitor/index.html"
    shouldExist: true
    permissions: "-rwxr-xr-x"
  
  - name: "README exists in ui directory"
    path: "/ui/strategy-monitor/README.md"
    shouldExist: true
    permissions: "-rwxr-xr-x"

commandTests:
  - name: "Python HTTP server help test"
    command: "/usr/local/bin/python3"
    args: ["-m", "http.server", "--help"]
    exitCode: 0
    expectedOutput:
      - "usage:"
      - "port"
      - "directory"
  
  - name: "Python executable test"
    command: "/usr/local/bin/python3"
    args: ["--version"]
    exitCode: 0
    expectedOutput:
      - "Python 3"
  
  - name: "HTML file validation test"
    command: "/usr/local/bin/python3"
    args: ["-c", "import os; html_path = '/ui/strategy-monitor/index.html'; print('HTML file exists:', os.path.exists(html_path)); print('HTML file size:', os.path.getsize(html_path) if os.path.exists(html_path) else 'N/A')"]
    exitCode: 0
    expectedOutput:
      - "HTML file exists: True"
      - "HTML file size:"
  
  - name: "Directory listing test"
    command: "/usr/local/bin/python3"
    args: ["-c", "import os; print('Files in /ui/strategy-monitor:', os.listdir('/ui/strategy-monitor')); print('HTML file in listing:', 'index.html' in os.listdir('/ui/strategy-monitor'))"]
    exitCode: 0
    expectedOutput:
      - "Files in /ui/strategy-monitor:"
      - "HTML file in listing: True"
  
  - name: "Working directory test"
    command: "/usr/local/bin/python3"
    args: ["-c", "import os; print('Working directory:', os.getcwd()); print('Working directory is /app:', os.getcwd() == '/app')"]
    exitCode: 0
    expectedOutput:
      - "Working directory: /app"
      - "Working directory is /app: True"
  
  - name: "User permissions test"
    command: "/usr/local/bin/python3"
    args: ["-c", "import os; import pwd; uid = os.getuid(); user_info = pwd.getpwuid(uid); print('Running as user:', user_info.pw_name); print('User is nobody:', user_info.pw_name == 'nobody')"]
    exitCode: 0
    expectedOutput:
      - "Running as user: nobody"
      - "User is nobody: True" 