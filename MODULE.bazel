bazel_dep(name = "aspect_bazel_lib", version = "2.8.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "container_structure_test", version = "1.16.0")
bazel_dep(name = "rules_jvm_external", version = "6.5")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_java", version = "8.3.1")

# Add Java toolchain configuration
JAVA_LANGUAGE_LEVEL = "17"

java = use_extension("@rules_java//java:extensions.bzl", "java")
java.toolchain(
    name = "java",
    java_runtime = "@rules_java//toolchains:remotejdk_17",
    source_version = JAVA_LANGUAGE_LEVEL,
    target_version = JAVA_LANGUAGE_LEVEL,
)
use_repo(java, "java_tools")

# Register the toolchain
register_toolchains(
    "@rules_java//toolchains:all",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.knowm.xchange:xchange-core:5.2.0",
        "org.knowm.xchange:xchange-stream-core:5.2.0",
        "org.knowm.xchange:xchange-coinbasepro:5.2.0",
        "org.knowm.xchange:xchange-stream-coinbasepro:5.2.0",
        # Make sure we use RxJava 3.x as that's what xchange-stream uses
        "io.reactivex.rxjava3:rxjava:3.1.6",
        "com.google.guava:guava:31.1-jre",
        "com.google.inject:guice:7.0.0",
        "com.google.protobuf:protobuf-java:3.21.12",
        "org.apache.kafka:kafka-clients:3.6.1",
        "org.slf4j:slf4j-api:2.0.12",
        "junit:junit:4.13.2",
        "org.mockito:mockito-core:4.3.1",
        "com.google.inject.extensions:guice-testlib:7.0.0",
        "com.google.truth:truth:1.1.2",
        "com.google.testparameterinjector:test-parameter-injector:1.9",
    ],
    fetch_sources = True,
    repositories = [
        "https://repo1.maven.org/maven2",
        "https://jcenter.bintray.com/",
    ],
)
use_repo(maven, "maven")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

oci.pull(
    name = "openjdk_java",
    digest = "sha256:b76af3b248acbcd94ffae671900e9fa8e2f869688598e5733a5fb6e983e51928",
    image = "docker.io/library/openjdk",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)

use_repo(oci, "openjdk_java")

bazel_lib = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
bazel_lib.jq()
bazel_lib.tar()
use_repo(bazel_lib, "bsd_tar_toolchains", "jq_toolchains")
