apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tradestream.fullname" . }}-data-ingestion
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "tradestream.name" . }}
    component: data-ingestion
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.dataIngestion.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "tradestream.name" . }}
      component: data-ingestion
  template:
    metadata:
      labels:
        app: {{ include "tradestream.name" . }}
        component: data-ingestion
    spec:
      initContainers:
        - name: wait-for-kafka
          image: bitnami/kafka:latest
          command:
            - /bin/bash
            - -c
            - |
              until /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server my-tradestream-kafka-controller:9092 --list | grep -q '^candles$'; do
                echo "Waiting for candles topic to be ready..."
                sleep 5
              done
              echo "Topic 'candles' exists, continuing..."
      containers:
        - name: data-ingestion
          args:
          {{- range .Values.dataIngestion.args }}
            - {{ . | quote }}
          {{- end }}
            - "--kafka.bootstrap.servers={{ include "tradestream.fullname" . }}-kafka.{{ .Release.Namespace }}.svc.cluster.local:9092"


          image: "{{ .Values.dataIngestion.image.repository }}:{{ .Values.dataIngestion.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.dataIngestion.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.dataIngestion.service.port }}
          env:
            - name: COINMARKETCAP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: coinmarketcap
                  key: apiKey
