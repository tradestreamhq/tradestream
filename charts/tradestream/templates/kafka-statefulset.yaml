apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: {{ .Values.kafka.replicaCount }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.kafka.config.node.id }}"
            - name: KAFKA_PROCESS_ROLES
              value: "{{ .Values.kafka.config.process.roles }}"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "{{ .Values.kafka.config.controller.quorum.voters }}"
            - name: KAFKA_LISTENERS
              value: "{{ .Values.kafka.config.listeners }}"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "{{ .Values.kafka.config.listener.security.protocol.map }}"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "{{ .Values.kafka.config.inter.broker.listener.name }}"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "{{ .Values.kafka.config.controller.listener.names }}"
            - name: KAFKA_LOG_DIRS
              value: "{{ .Values.kafka.config.log.dirs }}"
            - name: KAFKA_OFFSET_STORAGE
              value: "{{ .Values.kafka.config.offset.storage }}"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "{{ .Values.kafka.config.transaction.state.log.replication.factor }}"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "{{ .Values.kafka.config.transaction.state.log.min.isr }}"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-data
          emptyDir: {}
