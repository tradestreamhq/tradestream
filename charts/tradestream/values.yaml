influxdb:
  enabled: true
  # Base organization and bucket settings
  adminUser:
    organization: "tradestream-org"
    bucket: "tradestream-data"
    retention_policy: "30d"
    # OPTION 1: Auto-generate credentials (good for dev/testing)
    user:
      name: "admin"
      # password will be auto-generated if not specified
    token:
      enabled: true
      auto: true
      # OPTION 2: Use existing secrets (good for production)
      # Uncomment these and comment out the above user/token settings
      # user:
      #   name: "admin"
      #   existingSecret: "influxdb-admin-secret"
      #   existingSecretKey: "admin-password"
      # token:
      #   enabled: true
      #   existingSecret: "influxdb-admin-secret"
      #   existingSecretKey: "admin-token"
  # Additional buckets beyond the default one
  initialBuckets:
    - name: "tradestream-metrics"
      retention_policy: "7d"
  persistence:
    enabled: true
    size: 8Gi
  service:
    type: ClusterIP
kafka:
  replicaCount: 3
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - ReadWriteOnce
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
  configurationOverrides:
    "controller.quorum.voters": "0@kafka-0.kafka-headless:9093,1@kafka-1.kafka-headless:9093,2@kafka-2.kafka-headless:9093"
  podSecurityContext:
    runAsUser: 1001
    fsGroup: 1001
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
    limits:
      cpu: "2"
      memory: "4Gi"
kafkaUi:
  replicaCount: 1
  image:
    repository: provectuslabs/kafka-ui
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
pipeline:
  runMode: wet
  image:
    repository: tradestreamhq/tradestream-data-pipeline
    tag: v1.23.18-develop
    pullPolicy: IfNotPresent
  version: v1_18
  configuration:
    env.java.opts.jobmanager: "-Dio.jenetics.util.defaultRandomGenerator=Random"
    env.java.opts.taskmanager: "-Dio.jenetics.util.defaultRandomGenerator=Random"
    taskmanager.numberOfTaskSlots: "1"
    execution.checkpointing.interval: "300000"
    execution.checkpointing.mode: "EXACTLY_ONCE"
    execution.checkpointing.timeout: "1800000"
    execution.checkpointing.externalized-checkpoint-retention: "RETAIN_ON_CANCELLATION"
    state.backend: "rocksdb"
    state.backend.incremental: "true"
  serviceAccount: flink
  jobManager:
    memory: 4096m
    cpu: 2
  taskManager:
    memory: 4096m
    cpu: 2
  job:
    entryClass: com.verlumen.tradestream.pipeline.App
    jarURI: local:///src/main/java/com/verlumen/tradestream/pipeline/app_deploy.jar
    parallelism: 1
    upgradeMode: stateless
